{"version":3,"sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","assets/images/Avatar.jpg","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileDataForm.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","style","justBtn","MyPosts","React","memo","postElements","posts","reverse","map","p","id","postsBlock","value","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusCursor","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","profile","error","formSummoryError","createField","Input","type","Object","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","profileInfo","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","edit","onClick","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","avatar","photos","large","Avatar1","download","target","files","length","initialValues","formData","then","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authoraizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","isAuth","auth","withRouter"],"mappings":"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","file":"static/js/3.cd16d5d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__YrxCx\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2KwE9\",\"contact\":\"ProfileInfo_contact__2DuIE\",\"profileInfo\":\"ProfileInfo_profileInfo__3GzW4\",\"edit\":\"ProfileInfo_edit__2KlZh\",\"statusCursor\":\"ProfileInfo_statusCursor__-hbqC\",\"download\":\"ProfileInfo_download__2o0w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Q_pY\",\"posts\":\"MyPosts_posts__zHQrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3wObJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3jemr\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n      <div className={s.item}>\r\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a8/Grapefruit%2C_half.jpg\" />\r\n        {props.message}\r\n        <div>\r\n          <span>like</span>{props.likesCount}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport style from \"../../common/Paginator/Paginator.module.css\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder='Enter your post' name='newPostText' component={Textarea} validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button className={style.justBtn}>Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postElements =\r\n    [...props.posts]      // immutability!!! очень важно в pure function\r\n      .reverse()\r\n      .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n\r\n  let onAddPost = (value) => {\r\n    props.addPost(value.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My post</h3>\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);","export default __webpack_public_path__ + \"static/media/Avatar.bb756094.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  },\r\n    [props.status]\r\n  )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  };\r\n\r\n\r\n  // state = {\r\n  //   editMode: false,\r\n  //   status: this.props.status,\r\n  // }\r\n\r\n  // activateEditMode = () => {\r\n  //   this.setState({\r\n  //     editMode: true\r\n  //   })    // this.forceUpdate()      На крайняК!\r\n  // }\r\n  // deactivateEditMode = () => {\r\n  //   this.setState({\r\n  //     editMode: false\r\n  //   })    // this.forceUpdate()      На крайняК!\r\n  //   this.props.updateStatus(this.state.status)\r\n  // };\r\n\r\n\r\n  // onStatusChange = (e) => {\r\n  //   this.setState({\r\n  //     status: e.currentTarget.value\r\n  //   })\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevProps.status !== this.props.status) {\r\n  //     this.setState({\r\n  //       status: this.props.status\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <b>Status</b>: <span className={s.statusCursor} onDoubleClick={activateEditMode} >{props.status || '-------'}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummoryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div><b>Full name</b>: {createField(\"Full Name\", \"fullname\", Input, [])}</div>\r\n        <div><b>Looking for a job</b>: {createField(\"\", \"LookingForAJob\", Input, [], { type: \"checkbox\" })}</div>\r\n        <div>\r\n            <b>My skills</b>: {createField(\"My skills\", \"LookingForAJobDescription\", Textarea, [])}\r\n        </div>\r\n\r\n        <div><b>About me</b>: {createField(\"About me\", \"AboutMe\", Textarea, [])}</div>\r\n        <div><b>Constacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, Input, [])}</b>\r\n            </div>\r\n        })}</div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Avatar1 from \"../../../assets/images/Avatar.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\nimport style from \"../../common/Paginator/Paginator.module.css\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <div className={s.avatar}>\r\n          <img src={profile.photos.large || Avatar1} />\r\n        </div>\r\n        <div className={s.download}>\r\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n        <div>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n          {editMode\r\n            ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n            : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div className={s.profileInfo}>\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div><b>About me</b>: {profile.aboutMe}</div>\r\n    <div>\r\n      <b>Constacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}</div>\r\n    <div className={s.edit}>\r\n      {isOwner && <div><button className={style.justBtn} onClick={goToEditMode}>edit</button></div>}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo saveProfile={props.saveProfile}\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authoraizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return <Profile {...this.props}\r\n      isOwner={!this.props.match.params.userId}\r\n      profile={this.props.profile}\r\n      status={this.props.status}\r\n      updateStatus={this.props.updateStatus}\r\n      savePhoto={this.props.savePhoto}\r\n      saveProfile={this.props.saveProfile} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authoraizedUserId: state.auth.userId,\r\n});\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(\r\n//   WithUrlDataContainerComponent\r\n// );\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}