{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","assets/images/Avatar.png","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","React","memo","postElements","posts","reverse","map","p","postsBlock","value","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","avatar","photos","large","Avatar1","aboutMe","Preloader","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authoraizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","isAuth","auth","withRouter"],"mappings":"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","file":"static/js/3.270285a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__33iB2\",\"posts\":\"MyPosts_posts__2EV99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1RUKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__WGSl0\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2yBYO\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n      <div className={s.item}>\r\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a8/Grapefruit%2C_half.jpg\" />\r\n        {props.message}\r\n        <div>\r\n          <span>like</span>{props.likesCount}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder='Enter your post' name='newPostText' component={Textarea} validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postElements =\r\n    [...props.posts]      // immutability!!! очень важно в pure function\r\n      .reverse()\r\n      .map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n\r\n  let onAddPost = (value) => {\r\n    props.addPost(value.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My post</h3>\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);","export default __webpack_public_path__ + \"static/media/Avatar.fb17ea4a.png\";","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  },\r\n    [props.status]\r\n  )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  };\r\n\r\n\r\n  // state = {\r\n  //   editMode: false,\r\n  //   status: this.props.status,\r\n  // }\r\n\r\n  // activateEditMode = () => {\r\n  //   this.setState({\r\n  //     editMode: true\r\n  //   })    // this.forceUpdate()      На крайняК!\r\n  // }\r\n  // deactivateEditMode = () => {\r\n  //   this.setState({\r\n  //     editMode: false\r\n  //   })    // this.forceUpdate()      На крайняК!\r\n  //   this.props.updateStatus(this.state.status)\r\n  // };\r\n\r\n\r\n  // onStatusChange = (e) => {\r\n  //   this.setState({\r\n  //     status: e.currentTarget.value\r\n  //   })\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevProps.status !== this.props.status) {\r\n  //     this.setState({\r\n  //       status: this.props.status\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode} >{status || '-------'}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Avatar1 from \"../../../assets/images/Avatar.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <div className={s.avatar}>\r\n          <img src={profile.photos.large != null ? profile.photos.large : Avatar1} />\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n        <div>{profile.aboutMe}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authoraizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n\r\n    return <Profile {...this.props}\r\n      profile={this.props.profile}\r\n      status={this.props.status}\r\n      updateStatus={this.props.updateStatus} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authoraizedUserId: state.auth.userId,\r\n});\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(\r\n//   WithUrlDataContainerComponent\r\n// );\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}