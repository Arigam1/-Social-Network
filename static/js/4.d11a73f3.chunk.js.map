{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/DialogItem/Dialogitem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","DialogItem","path","id","className","s","dialog","active","to","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","value","sendMessage","newMessageBody","mapStateToPropForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,6GCI7MC,EAAcC,YAAiB,IAexBC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAbZ,SAACE,GACpB,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBC,KAAK,iBAAiBC,UAAWC,IAAUC,SAAU,CAACC,IAAUd,OAE5G,8BACI,mD,0BCCDe,EAXI,SAACV,GAEhB,IAAIW,EAAO,WAAaX,EAAMY,GAE9B,OACI,qBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,SACI,eAAC,IAAD,CAASC,GAAIN,EAAb,cAAqBX,EAAMK,KAA3B,UCDGa,EANC,SAAClB,GACb,OACI,qBAAKa,UAAWC,IAAEK,QAAlB,SAA4BnB,EAAMmB,WCwB3BC,EAvBC,SAACpB,GACb,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMO,GAAIc,EAAEd,QACzEe,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASV,QAASU,EAAEV,aAMnE,OACI,sBAAKN,UAAWC,IAAEU,QAAlB,UACI,qBAAKX,UAAWC,IAAEgB,aAAlB,SACKP,IAEL,qBAAKV,UAAWC,IAAEc,SAAlB,SACKD,IAEL,cAAC9B,EAAD,CAAqBI,SAZT,SAAC8B,GACjB/B,EAAMgC,YAAYD,EAAME,uB,uDCR5BC,EAA4B,SAACb,GAAD,MAAY,CACxCc,OAAQd,EAAMe,KAAKD,S,OCgBRE,sBACXC,aAfkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACiB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDRR,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK3C,MAAMmC,OACT,cAACM,EAAD,eAAeE,KAAK3C,QADI,cAAC,IAAD,CAAUiB,GAAG,eAHT,GACX2B,IAAMH,WAQtC,OADmCH,YAAQJ,EAARI,CAAmCI,KCK3DL,CAGbjB","file":"static/js/4.d11a73f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1i7rY\",\"dialog\":\"Dialogs_dialog__1h3t9\",\"dialogsItems\":\"Dialogs_dialogsItems__d-4ZE\",\"active\":\"Dialogs_active__3AnSQ\",\"messages\":\"Dialogs_messages__cw-rC\",\"message\":\"Dialogs_message__eTWq9\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Enter your message' name=\"newMessageBody\" component={Textarea} validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs\" + props.id;\r\n\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { AddMessageFormRedux } from './AddMessageForm/AddMessageForm';\r\nimport DialogItem from './DialogItem/Dialogitem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div >\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n// export default DialogsContainer;\r\n\r\n"],"sourceRoot":""}